#!/usr/bin/env bash
#
# Package: HomeKit-ADK
# Version: 2.0 (16A62)
#
# Disclaimer: IMPORTANT: This Apple software is supplied to you, by Apple Inc. ("Apple"), in your
# capacity as a current, and in good standing, Licensee in the MFi Licensing Program. Use of this
# Apple software is governed by and subject to the terms and conditions of your MFi License,
# including, but not limited to, the restrictions specified in the provision entitled "Public
# Software", and is further subject to your agreement to the following additional terms, and your
# agreement that the use, installation, modification or redistribution of this Apple software
# constitutes acceptance of these additional terms. If you do not agree with these additional terms,
# you may not use, install, modify or redistribute this Apple software.
#
# Subject to all of these terms and in consideration of your agreement to abide by them, Apple grants
# you, for as long as you are a current and in good-standing MFi Licensee, a personal, non-exclusive
# license, under Apple's copyrights in this Apple software (the "Apple Software"), to use,
# reproduce, and modify the Apple Software in source form, and to use, reproduce, modify, and
# redistribute the Apple Software, with or without modifications, in binary form, in each of the
# foregoing cases to the extent necessary to develop and/or manufacture "Proposed Products" and
# "Licensed Products" in accordance with the terms of your MFi License. While you may not
# redistribute the Apple Software in source form, should you redistribute the Apple Software in binary
# form, you must retain this notice and the following text and disclaimers in all such redistributions
# of the Apple Software. Neither the name, trademarks, service marks, or logos of Apple Inc. may be
# used to endorse or promote products derived from the Apple Software without specific prior written
# permission from Apple. Except as expressly stated in this notice, no other rights or licenses,
# express or implied, are granted by Apple herein, including but not limited to any patent rights that
# may be infringed by your derivative works or by other works in which the Apple Software may be
# incorporated. Apple may terminate this license to the Apple Software by removing it from the list
# of Licensed Technology in the MFi License, or otherwise in accordance with the terms of such MFi License.
#
# Unless you explicitly state otherwise, if you provide any ideas, suggestions, recommendations, bug
# fixes or enhancements to Apple in connection with this software ("Feedback"), you hereby grant to
# Apple a non-exclusive, fully paid-up, perpetual, irrevocable, worldwide license to make, use,
# reproduce, incorporate, modify, display, perform, sell, make or have made derivative works of,
# distribute (directly or indirectly) and sublicense, such Feedback in connection with Apple products
# and services. Providing this Feedback is voluntary, but if you do provide Feedback to Apple, you
# acknowledge and agree that Apple may exercise the license granted above without the payment of
# royalties or further consideration to Participant.
#
# The Apple Software is provided by Apple on an "AS IS" basis. APPLE MAKES NO WARRANTIES, EXPRESS OR
# IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE, REGARDING THE APPLE SOFTWARE OR ITS USE AND OPERATION ALONE OR
# IN COMBINATION WITH YOUR PRODUCTS.
#
# IN NO EVENT SHALL APPLE BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) ARISING IN ANY WAY OUT OF THE USE, REPRODUCTION, MODIFICATION
# AND/OR DISTRIBUTION OF THE APPLE SOFTWARE, HOWEVER CAUSED AND WHETHER UNDER THEORY OF CONTRACT, TORT
# (INCLUDING NEGLIGENCE), STRICT LIABILITY OR OTHERWISE, EVEN IF APPLE HAS BEEN ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Copyright (C) 2018 Apple Inc. All Rights Reserved.
#

set -eu -o pipefail

if [[ "${1:-}" == -* ]]; then
    echo "CopyRaspiSamples is a tool to copy sample code to a Raspberry Pi."
    echo
    echo "USAGE"
    echo "     CopyRaspiSamples [ user@host [:path] ]"
    echo
    echo "DESCRIPTION"
    echo "     This tool copies the POSIX SDK for Raspberry Pi including all application samples."
    echo
    echo "     Connects and logs into the specified host given by hostname with given user name and"
    echo "     copies the POSIX/Raspi SDK sample to path on the destination."
    echo
    echo "     Default: pi@raspberrypi.local:~"
    echo
    echo "     If no arguments are provided, user='pi' and path='~' are assumed and hostname is"
    echo "     prompted."
    echo
    exit
fi
echo "================================================================================"
echo "Copying POSIX SDK with samples to Raspberry Pi."
echo "================================================================================"
echo

piUser="pi"
piHostname="raspberrypi"
piDomain="local"
piPassword="raspberry"
piDestinationPath="~"

if [ $# -gt 0 ]; then
    if [[ "${1}" != *":"* ]]; then
        userHost="${1}"
        destinationPath="${piDestinationPath}"
    else
        userHost="${1%%:*}"
        destinationPath="${1##*:}"
    fi

    echo "User host:   ${userHost}"
    echo "Destination: ${destinationPath}"
    echo
else
    echo "Please enter hostname for Raspberry Pi ([return] to use '${piHostname}')."
    read -p "Hostname: " inputHostname
    echo
    inputHostname="${inputHostname:-${piHostname}}"
    if [[ "${inputHostname}" == *"."* ]]; then
        userHost="${piUser}@${inputHostname}"
    else
        userHost="${piUser}@${inputHostname}.${piDomain}"
    fi
    destinationPath="${piDestinationPath}"
fi
destination="${userHost}:${destinationPath}"

echo "Please enter password for Raspberry Pi ([return] to use '${piPassword}')."
read -s -p "Password: " inputPassword
echo
piPassword="${inputPassword:-${piPassword}}"

# Get script directory: https://stackoverflow.com/a/246128/151706
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

echo "================================================================================"
echo "Copying POSIX SDK with samples to Raspberry Pi."

expect <<EOF
    spawn rsync -avz --no-o --no-g --super --relative \
        -e ssh\ -o\ StrictHostKeyChecking=no\ -o\ UserKnownHostsFile=/dev/null \
        --exclude=.DS_Store --exclude=.HomeKitStore \
        "${DIR}/../.././Raspi/Applications" \
        "${DIR}/../.././Raspi/PAL" \
        "${DIR}/../.././Raspi/HAP/include" \
        "${DIR}/../.././Raspi/HAP/lib/ARM/GCC/" \
        "${DIR}/../.././Raspi/Tools/helpers/Pi" \
        "${DIR}/../.././Xtras" \
        "${destination}"
    expect {
        "timeout" {
            puts "\nERROR: ssh connection attempt timed out.";
            exit 1
        }
        "password:" {
            send "${piPassword}\n"
        }
    }
    expect {
        "done" {
        }
        "Permission denied" {
            puts "\nERROR: wrong password.";
            exit 1
        }
    }
    expect eof
EOF

echo "================================================================================"
echo "Copying to RaspberryPi complete."
echo "Log in with \`ssh ${userHost}\` and the previously supplied password."
echo "================================================================================"
